package interfaz;

import primitivas.Graph;
import primitivas.List;
import primitivas.User;import javax.swing.JOptionPane;
import primitivas.*;


/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */

/**
 *
 * @author DELL
 */
public class W22 extends javax.swing.JDialog {
    public Graph mygraph;
//    W33 w3;
    /**
     * Creates new form W2
     */
    public W22(java.awt.Frame parent, boolean modal, Graph graph) {
        super(parent, modal);
        initComponents();
        mygraph = graph;
        TextArea.setText(mygraph.showAttributes());
//        this.setSize(474,328);
        this.setLocationRelativeTo(null);
        this.setResizable(false);
    }
    public boolean isNumeric(String str) { 
        try {  
          Double.parseDouble(str);  
          return true;
        } catch(NumberFormatException e){  
          return false;  
        }  
        }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        DeleteBridge = new javax.swing.JButton();
        DeleteUser = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        NewUser = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TextArea = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        DeleteBridge.setText("Eliminar conexión");
        DeleteBridge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteBridgeActionPerformed(evt);
            }
        });
        getContentPane().add(DeleteBridge, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 230, -1, -1));

        DeleteUser.setText("Eliminar usuario");
        DeleteUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteUserActionPerformed(evt);
            }
        });
        getContentPane().add(DeleteUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, -1, -1));

        jButton3.setText("Nueva conexión");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, -1, -1));

        NewUser.setText("Nuevo usuario");
        NewUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewUserActionPerformed(evt);
            }
        });
        getContentPane().add(NewUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, -1, -1));

        TextArea.setEditable(false);
        TextArea.setColumns(20);
        TextArea.setRows(5);
        jScrollPane1.setViewportView(TextArea);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 40, 290, 230));

        jLabel1.setText("Menu de edición");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 10, -1, -1));

        jButton5.setText("Finalizar");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 290, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void NewUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewUserActionPerformed
        // TODO add your handling code here:
//        w3 = new W33(new javax.swing.JFrame(), true, mygraph);
//        w3.setVisible(true);
        String Userv = JOptionPane.showInputDialog("Ingrese nombre de usuario");
        if(Userv != null){
            String Id = JOptionPane.showInputDialog("Ingrese id del usuario");
            if(Id != null){
                if(!Userv.isBlank() && !Id.isBlank()){
                    if(Userv.contains("@")){
                        if(mygraph.searchNodo(Id) == null && this.isNumeric(Id)){
                            User newuser = new User(Id, Userv);
                            mygraph.getList().appendLast(newuser);
        //                    this.dispose();
                        }else{
                            JOptionPane.showMessageDialog(rootPane, "el id no es valido. solo numeros", "Error Id", HEIGHT);
                        }
                    }else{
                            JOptionPane.showMessageDialog(rootPane, "el usuario no es valido. debe contener @", "Error Usuario", HEIGHT);
                    }      
                }else{
                            JOptionPane.showMessageDialog(rootPane, "el usuario ni el id pueden estar vacios", "Error", HEIGHT);
                }
                TextArea.setText(mygraph.showAttributes());
                
            }
            
        }
        
    }//GEN-LAST:event_NewUserActionPerformed

    private void DeleteUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteUserActionPerformed
        // TODO add your handling code here:
        String id = JOptionPane.showInputDialog("Ingrese id del usuario a eliminar");
        
        if(mygraph.searchNodo(id) != null){
            mygraph.deleteUser(mygraph.searchNodo(id));
            JOptionPane.showMessageDialog(rootPane, "usuario eliminado exitosamente", "Operacion finalizada", HEIGHT);
            TextArea.setText(mygraph.showAttributes());
        }else{
            JOptionPane.showMessageDialog(rootPane, "no existe un usuario con ese id", "Usuario no encontrado", HEIGHT);
        }
    }//GEN-LAST:event_DeleteUserActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        String id = JOptionPane.showInputDialog("Ingrese id del primer usuario");
        
        Nodo<User> pAux = mygraph.searchNodo(id);
        if(pAux != null){
//            mygraph.deleteUser(mygraph.searchNodo(id));
            String id2 = JOptionPane.showInputDialog("Ingrese el id del segundo usuario");
            Nodo<User> pAux2 = mygraph.searchNodo(id2);
            if(pAux2 != null){
                String years = JOptionPane.showInputDialog("Ingrese la cantidad de años");

                if(mygraph.searchBridge(pAux, id2) == null){
                    if(!years.isBlank() && this.isNumeric(years)){
                        
                        Bridge pNew = new Bridge(pAux.getValue().getId(), pAux2.getValue().getId(), years);
                        Bridge pNew2 = new Bridge(pAux2.getValue().getId(),pAux.getValue().getId(),years);
        //                Nodo jj= new Nodo(pNew2);

                        mygraph.insertBridge(pNew, pNew2);
                        TextArea.setText(mygraph.showAttributes());
                        JOptionPane.showMessageDialog(rootPane, "conexion creada exitosamente", "Operacion finalizada", HEIGHT);
                
            }else{
                        
                JOptionPane.showMessageDialog(rootPane, "los años deben ser numeros enteros ", "Error", HEIGHT);
                    }
                }else{
                    
                JOptionPane.showMessageDialog(rootPane, "ya existe una conexion con ese usuario", "Error", HEIGHT);
                }    
                
            }else{
                    
                JOptionPane.showMessageDialog(rootPane, "no existe un usuario con ese id", "Usuario no encontrado", HEIGHT);
                }
        }else{
            JOptionPane.showMessageDialog(rootPane, "no existe un usuario con ese id", "Usuario no encontrado", HEIGHT);
        }
        TextArea.setText(mygraph.showAttributes());
 
    }//GEN-LAST:event_jButton3ActionPerformed

    private void DeleteBridgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteBridgeActionPerformed
        // TODO add your handling code here:
        String id = JOptionPane.showInputDialog("Ingrese id del primer usuario");
        if(mygraph.searchNodo(id) != null){
//            mygraph.deleteUser(mygraph.searchNodo(id));
            Nodo<User> pAux = mygraph.searchNodo(id);
            String id2 = JOptionPane.showInputDialog("Ingrese id del segundo usuario");
            if(mygraph.searchNodo(id2) != null){
                Nodo<User> pAux2 = mygraph.searchNodo(id2);
                
                Nodo<Bridge> pBridge = mygraph.searchBridge(pAux, pAux2.getValue().getId());
                Nodo<Bridge> pBridge2 = mygraph.searchBridge(pAux2, pAux.getValue().getId());
                if(pBridge != null && pBridge2 != null){
                    mygraph.deleteBridge(pBridge, pBridge2);
                    TextArea.setText(mygraph.showAttributes());
                    JOptionPane.showMessageDialog(rootPane, "conexion eliminada exitosamente", "Operacion finalizada", HEIGHT);
                    
                }else{
                    JOptionPane.showMessageDialog(rootPane, "usuario no posee dicha conexion", "Error", HEIGHT);
                    
                }
            }else{
                
                   JOptionPane.showMessageDialog(rootPane, "el la conexion no puede estar vacia ", "Error", HEIGHT);
            }
        }else{
                   JOptionPane.showMessageDialog(rootPane, "el usuario no existe ", "Error", HEIGHT);
            
        }
        
    }//GEN-LAST:event_DeleteBridgeActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(W22.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(W22.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(W22.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(W22.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                W22 dialog = new W22(new javax.swing.JFrame(), true, new Graph( new List<User>()));
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DeleteBridge;
    private javax.swing.JButton DeleteUser;
    private javax.swing.JButton NewUser;
    private javax.swing.JTextArea TextArea;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
